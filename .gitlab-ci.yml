include:
  - project: "zl0i/gitlab-ci-template"
    ref: main
    file: "build.template.yaml"
  - project: "zl0i/gitlab-ci-template"
    ref: main
    file: "deploy.template.yaml"
  - template: Code-Quality.gitlab-ci.yml

stages:
  - test
  - build
  - release
  - deploy

build:web:
  extends: .docker
  rules:
    - if: $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_BRANCH == "master"
      variables:
        BUILD_ARGS: "--build-arg API_URL=https://zloi.space"
    - if: $CI_COMMIT_BRANCH
      variables:
        BUILD_ARGS: "--build-arg API_URL=https://${CI_COMMIT_BRANCH}.zloi.space"
  variables:
    BUILD_DIR: "./web"
    IMAGE_NAME: zloi-web

build:updater:
  extends: .kaniko
  rules:
    - if: $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_BRANCH == "master"      
    - if: $CI_COMMIT_BRANCH     
  variables:
    BUILD_DIR: "./job"
    IMAGE_NAME: zloi-updater

code_quality:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

deploy:branch:
  extends: .helm_install
  environment:
    name: ${CI_COMMIT_BRANCH}
    url: https://${CI_COMMIT_BRANCH}.zloi.space
    deployment_tier: development
    on_stop: stop:branch:deploy
  variables:
    HELM_OPTIONS: "--set ingress.hostname=${CI_COMMIT_BRANCH}.zloi.space"
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null

deploy:production:
  extends: .helm_install
  environment:
    name: production
    url: https://zloi.space
    deployment_tier: production
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
  variables:
    HELM_OPTIONS: "--set ingress.hostname=zloi.space"

stop:branch:deploy:
  extends: .helm_uninstall
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_TAG == null
  environment:
    name: ${CI_COMMIT_BRANCH}
    action: stop
  variables:
    DELETE_NAMESPACE: "true"
  when: manual

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "Running release for $CI_COMMIT_TAG tag"
  release:
    name: "Release $CI_COMMIT_TAG"
    description: "Created using the release-cli $CI_COMMIT_DESCRIPTION"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_TAG"
